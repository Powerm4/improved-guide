"""Add Hash table. Performs some manual migration to copy over existing File hash values.

Revision ID: 6f8cfc06eaa3
Revises: f8035abd1974
Create Date: 2019-11-13 23:51:51.341826

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6f8cfc06eaa3'
down_revision = 'patch_3_0_0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hashes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.String(), nullable=True),
    sa.Column('full_hash', sa.String(), nullable=True),
    sa.Column('p1', sa.String(), nullable=True),
    sa.Column('p2', sa.String(), nullable=True),
    sa.Column('p3', sa.String(), nullable=True),
    sa.Column('p4', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('hashes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_hashes_file_id'), ['file_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_hashes_full_hash'), ['full_hash'], unique=False)
        batch_op.create_index(batch_op.f('ix_hashes_p1'), ['p1'], unique=False)
        batch_op.create_index(batch_op.f('ix_hashes_p2'), ['p2'], unique=False)
        batch_op.create_index(batch_op.f('ix_hashes_p3'), ['p3'], unique=False)
        batch_op.create_index(batch_op.f('ix_hashes_p4'), ['p4'], unique=False)

    conn = op.get_bind()
    res = conn.execute("select hash, id from files WHERE hash is not NULL")
    results = res.fetchall()

    for idx, row in enumerate(results):
        hsh = row[0]
        fid = row[1]
        vals = (idx+1, fid, hsh, *split_hash(hsh))
        conn.execute('INSERT INTO hashes (id, file_id, full_hash, p1, p2, p3, p4) VALUES (?, ?, ?, ?, ?, ?, ?)', vals)

    with op.batch_alter_table('files', schema=None) as batch_op:
        batch_op.drop_index('ix_files_hash')
        batch_op.drop_column('hash')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('files', schema=None) as batch_op:
        batch_op.add_column(sa.Column('hash', sa.VARCHAR(), nullable=True))
        batch_op.create_index('ix_files_hash', ['hash'], unique=False)

    with op.batch_alter_table('hashes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_hashes_p4'))
        batch_op.drop_index(batch_op.f('ix_hashes_p3'))
        batch_op.drop_index(batch_op.f('ix_hashes_p2'))
        batch_op.drop_index(batch_op.f('ix_hashes_p1'))
        batch_op.drop_index(batch_op.f('ix_hashes_full_hash'))
        batch_op.drop_index(batch_op.f('ix_hashes_file_id'))

    op.drop_table('hashes')
    # ### end Alembic commands ###


def split_hash(hash_string):
    """ Split the given Hash string into sections, formatted to fit in the Hash table. """
    if len(hash_string) != 16:
        return [None, None, None, None]
    return [hash_string[i:i + 4] for i in range(0, len(hash_string), 4)]
